// Generated by CoffeeScript 1.10.0
var RedisStore, app, bodyParser, coffeeify, compression, cookieParser, errorMiddleware, express, expressApp, expressSession, kclient, kmodel, liveDbMongo, mongoUrl, publicDir, racerhighway, racerhighwayHandlers, redis1, redis2, redisUrl, routes, session, store;

express = require('express');

kclient = require('k-client');

kclient.use(require('k-bundle'));

kmodel = require('k-model');

racerhighway = require('k-highway');

liveDbMongo = require('k-livedb-mongo');

coffeeify = require('coffeeify');

app = require('../app/index');

routes = require('./routes');

errorMiddleware = require('./error');

cookieParser = require('cookie-parser');

bodyParser = require('body-parser');

compression = require('compression');

expressSession = require('express-session');

RedisStore = require('connect-redis')(expressSession);

expressApp = module.exports = express();

kmodel.Model.INITS.push(function(model) {
  return model.root.on('error', function(err) {
    return console.log(err);
  });
});

if (process.env.REDIS_HOST) {
  redis1 = require('redis').createClient(process.env.REDIS_PORT, process.env.REDIS_HOST);
  redis1.auth(process.env.REDIS_PASSWORD);
  redis2 = require('redis').createClient(process.env.REDIS_PORT, process.env.REDIS_HOST);
  redis2.auth(process.env.REDIS_PASSWORD);
} else if (process.env.REDISCLOUD_URL) {
  redisUrl = require('url').parse(process.env.REDISCLOUD_URL);
  redis1 = require('redis').createClient(redisUrl.port, redisUrl.hostname);
  redis1.auth(redisUrl.auth.split(":")[1]);
  redis2 = require('redis').createClient(redisUrl.port, redisUrl.hostname);
  redis2.auth(redisUrl.auth.split(":")[1]);
} else {
  redis1 = require('redis').createClient();
  redis2 = require('redis').createClient();
}

redis1.select(0);

redis2.select(0);

mongoUrl = process.env.MONGO_URL || process.env.MONGOHQ_URL || 'mongodb://localhost:27017/k-ads-admin';

publicDir = __dirname + '/../../public';

liveDbMongo = liveDbMongo(mongoUrl + '?auto_reconnect', {
  safe: true
});

store = kclient.createStore({
  db: liveDbMongo,
  redis1: redis1,
  redis2: redis2
});


/*
store.shareClient.backend.addProjection "auths_public", "auths", 'json0',
  {
    id: true,
    timestamps: true,
    status: true,
    local: true
  }
 */

session = expressSession({
  secret: process.env.SESSION_SECRET || 'no-one-is-going-to-crack-this-except-nsa',
  store: new RedisStore({
    host: process.env.REDIS_HOST || 'localhost',
    port: process.env.REDIS_PORT || 6379
  }),
  resave: false,
  saveUninitialized: false
});

racerhighwayHandlers = racerhighway(store, {
  session: session
});

module.exports.upgrade = racerhighwayHandlers.upgrade;

store.on('bundle', function(browserify) {
  return browserify.transform(coffeeify);
});

expressApp.use(compression({
  threshold: 512
})).use(express["static"](publicDir)).use(cookieParser()).use(session).use(racerhighwayHandlers.middleware).use(store.modelMiddleware()).use(bodyParser.urlencoded({
  extended: true
})).use(app.router());

routes(expressApp);

expressApp.use(errorMiddleware);

app.writeScripts(store, publicDir, {
  extensions: [".coffee"],
  disableScriptMap: false
}, function(err) {
  console.log(err);
});
